# openapi.yaml

# この一行目が「書類の種類」を宣言する、最も重要な部分です。
openapi: 3.0.3

# これは「書類のタイトル」に相当します。
info:
  title: "法話メーカー"
  description: "AIエージェントが、法話の草稿を生成するためのAPIです。"
  version: "1.0.0"

# これはAPIサーバーの「住所」です。
servers:
  - url: "/v1"

# これがAPIの「本体」、具体的な機能の定義です。
paths:
  /howa:
    post:
      summary: "法話の草稿を生成する"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateHowaRequest"
      responses:
        "202":
          description: "タスクの登録に成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HowaTaskSubmissionResponse"
        "500":
          description: "サーバー内部エラー"
        "503":
          description: "外部サービス利用不可"

  /howa/{task_id}:
    get:
      summary: "法話生成タスクの状態を取得する"
      parameters:
        - name: task_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "タスクの状態を返却"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HowaTaskStatusResponse"
        "404":
          description: "タスクが存在しない"
        "503":
          description: "キューサービスが利用できない"

# これが「巻末の用語集」、再利用する部品の定義です。
components:
  schemas:
    GenerateHowaRequest:
      type: object
      required: [theme, audiences]
      properties:
        theme:
          type: string
          example: "感謝"
        audiences:
          type: array
          items:
            type: string
            enum: [子供, 若者, ビジネスパーソン, 高齢者, 指定なし]
          example: ["若者"]

    HowaResponse:
      type: object
      properties:
        title:
          type: string
        introduction:
          type: string
        problem_statement:
          type: string
        sutra_quote:
          type: object
          properties:
            text:
              type: string
            source:
              type: string
        modern_example:
          type: string
        conclusion:
          type: string
    HowaTaskStatus:
      type: string
      enum: [queued, processing, completed, failed]
    HowaTaskSubmissionResponse:
      type: object
      required: [task_id, status]
      properties:
        task_id:
          type: string
        status:
          $ref: "#/components/schemas/HowaTaskStatus"
    HowaTaskStatusResponse:
      type: object
      required: [task_id, status]
      properties:
        task_id:
          type: string
        status:
          $ref: "#/components/schemas/HowaTaskStatus"
        result:
          $ref: "#/components/schemas/HowaResponse"
          nullable: true
        error:
          type: string
          nullable: true
